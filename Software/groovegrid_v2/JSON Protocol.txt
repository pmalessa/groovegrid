Each Command has to include a unique CommandID, which will be included in the Response as well
All Commands will return an ACK or NACK even if they have no returns.

Control Channel
{
	All Commands inside the Control Channel waits for the reception of the ACK by the right phone before it handles the next Command.
	One way would be to block write access to symbolize business. Another way would be to return some kind of busy signal to the second phone.

	Each commandID has to be mapped to the userID that sent that command. If a different userID read the command response, 
	it will be kept in the characteristic for the next read, hopefully for the right phone. Otherwise delete response, because it reached its destination.

	get GridData
	{
		arguments: none
		return: GridWidth, GridHeight, OriginPosition
		}
	}
	
	get App List
	{
		arguments: none
		return: AppList
	}
	
	start App
	{
		arguments: AppName
		return: none
	}
	
	load App
	{
		arguments: AppName, SaveGame
		return: none
	}

	save App
	{
		arguments: none
		return: SaveGame
	}
	
	stop App
	{
		arguments: none
		return: none
	}
	
	registerUser
	{
		arguments: none
		return: userID
	}
	unregisterUser
	{
		arguments: none
		return: none
	}
	

}
User Channel Game
{
	UserInput
	{
		arguments: Input
		return: none
	}
	
	UserNotify	-> back channel from Grid to Phone
	{
		arguments:
		return: Message
	}
}

User Channel AnimationRunner
{
	get Animations
	{
		arguments: none
		return: animationList
	}
	
	set Animation
	{
		arguments: AnimationName, Config
		return: none
	}
}


Phone -------------------------------------------------- BLE Lib  ---------------------------------------------------------------- App

write(Command(comID)) ----------------->

										                    --------------------------------------------------------> onWrite(Command(comID), userID)
																				
																				                                          ...process Command...
																				
										                     <-------------------------------------------------------- writeResponse(response(comID))

									                save response in
									                 responseQueue,
									            put first in Characteristic

read() --------------------------------------------------->

	<------------------------------------------------ response(comID)

             									if right userID: remove response
			            						if wrong userID: keep response
